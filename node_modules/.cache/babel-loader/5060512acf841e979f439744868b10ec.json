{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-starwars-planets-search/src/context/ContextComponent.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextProvider from './ContextProvider';\nimport fetchPlanets from '../hooks/fetchStarsWars';\n\nfunction ContextComponent(_ref) {\n  let {\n    children\n  } = _ref;\n  const initialData = {\n    filterByName: {\n      name: ''\n    }\n  };\n  const [planets, filterData] = FetchPlanets;\n  return /*#__PURE__*/React.createElement(ContextProvider.Provider, {\n    value: {\n      data,\n      planets\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nContextComponent.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ContextComponent;","map":{"version":3,"sources":["/home/wellington/√Årea de Trabalho/projects/sd-016-b-project-starwars-planets-search/src/context/ContextComponent.jsx"],"names":["React","PropTypes","ContextProvider","fetchPlanets","ContextComponent","children","initialData","filterByName","name","planets","filterData","FetchPlanets","data","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,gBAAT,OAAwC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACtC,QAAMC,WAAW,GAAG;AAClBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM;AADI,GAApB;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,YAA9B;AACA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAG;AAAEC,MAAAA,IAAF;AAAQH,MAAAA;AAAR,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,QADJ,CADF;AAKD;;AAEDD,gBAAgB,CAACS,SAAjB,GAA6B;AAC3BR,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,IAAV,CAAeC;AADE,CAA7B;AAIA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextProvider from './ContextProvider';\nimport fetchPlanets from '../hooks/fetchStarsWars';\n\nfunction ContextComponent({ children }) {\n  const initialData = {\n    filterByName: {\n      name: '',\n    },\n  };\n\n  const [planets, filterData] = FetchPlanets;\n  return (\n    <ContextProvider.Provider value={ { data, planets } }>\n      { children }\n    </ContextProvider.Provider>\n  );\n}\n\nContextComponent.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ContextComponent;\n"]},"metadata":{},"sourceType":"module"}