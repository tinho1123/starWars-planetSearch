{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-starwars-planets-search/src/context/ContextComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContextProvider from './ContextProvider';\nimport fetchPlanets from '../hooks/fetchStarsWars';\n\nfunction ContextComponent(_ref) {\n  let {\n    children\n  } = _ref;\n  const initialData = {\n    filterByName: {\n      name: ''\n    }\n  };\n  const [data] = fetchPlanets();\n  const [planets, setPlanets] = useState([]);\n  const [filters, setFilters] = useState(initialData);\n  useEffect(() => {\n    if (data) {\n      setPlanets(data.results);\n    }\n  }, [data]);\n  const context = {\n    planets,\n    filters,\n    setFilters\n  };\n  return /*#__PURE__*/React.createElement(ContextProvider.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nContextComponent.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ContextComponent;","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-starwars-planets-search/src/context/ContextComponent.jsx"],"names":["React","useState","useEffect","PropTypes","ContextProvider","fetchPlanets","ContextComponent","children","initialData","filterByName","name","data","planets","setPlanets","filters","setFilters","results","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,SAASC,gBAAT,OAAwC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACtC,QAAMC,WAAW,GAAG;AAClBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM;AADI,GAApB;AAMA,QAAM,CAACC,IAAD,IAASN,YAAY,EAA3B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACO,WAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAJ,EAAU;AACRE,MAAAA,UAAU,CAACF,IAAI,CAACK,OAAN,CAAV;AACD;AACF,GAJQ,EAIN,CAACL,IAAD,CAJM,CAAT;AAMA,QAAMM,OAAO,GAAG;AACdL,IAAAA,OADc;AAEdE,IAAAA,OAFc;AAGdC,IAAAA;AAHc,GAAhB;AAMA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIV,QADJ,CADF;AAKD;;AAEDD,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BX,EAAAA,QAAQ,EAAEJ,SAAS,CAACgB,IAAV,CAAeC;AADE,CAA7B;AAIA,eAAed,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ContextProvider from './ContextProvider';\nimport fetchPlanets from '../hooks/fetchStarsWars';\n\nfunction ContextComponent({ children }) {\n  const initialData = {\n    filterByName: {\n      name: '',\n    },\n  };\n\n  const [data] = fetchPlanets();\n  const [planets, setPlanets] = useState([]);\n  const [filters, setFilters] = useState(initialData);\n\n  useEffect(() => {\n    if (data) {\n      setPlanets(data.results);\n    }\n  }, [data]);\n\n  const context = {\n    planets,\n    filters,\n    setFilters,\n  };\n\n  return (\n    <ContextProvider.Provider value={ context }>\n      { children }\n    </ContextProvider.Provider>\n  );\n}\n\nContextComponent.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ContextComponent;\n"]},"metadata":{},"sourceType":"module"}